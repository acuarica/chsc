root nq = let gen n = case n of Z -> []; S n' -> (n, nq):gen n'
          in gen nq

tests = [
    (root Z,             []),
    (root (S Z),         [(      S Z,         S Z)]),
    (root (S (S Z)),     [(   S (S Z),     S (S Z)),     (S Z,     S (S Z))]),
    (root (S (S (S Z))), [(S (S (S Z)), S (S (S Z))), (S (S Z), S (S (S Z))), (S Z, S (S (S Z)))])
  ]
