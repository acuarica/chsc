-- Simple demonstration
example1 = \unk -> let x = unk `add'Int` y
                       y = case x of _ -> 2
                   in y `add'Int` 2

-- Harder demonstration that illustrates the need for a fixed point
example2 = \unk fact -> let a = fact 100
                            y = unk `add'Int` x
                            w = fact z
                            x = case y of _ -> w `add'Int` 3
                            z = case x of _ -> a `add'Int` 3
                        in z `add'Int` w `add'Int` a

root = (example1, example2)
