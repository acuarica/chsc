foldr c n xs = case xs of [] -> n; (y:ys) -> c y (foldr c n ys)
(++) xs ys = foldr ys (:) xs
map f = foldr [] (\x xs -> f x : xs)

root f xs ys = (map f (xs ++ ys), map f xs ++ map f ys)

tests = [
    (root (+1) [1, 2] [3, 4], ([2, 3, 4, 5], [2, 3, 4, 5]))
  ]