#!/usr/bin/env python

from utilities import *

abbreviations = { "Filename" : "Test", "SC time" : "SC", "Compile time" : "Cmp.", "Run time" : "Run", "Heap size" : "Mem.", "Term size" : "Size", "Reduce-stops" : None, "SC-stops" : None }
def abbreviate(header):
    return bind_maybe(abbreviations[header], lambda header: "\\textbf{" + header + "}")

def percentify(x):
    # We don't want to show absolute values as percentages, however unlikely they are to show up
    if "." in x:
        try:
            # Simon wants percentages in output instead
            return show_percentage_difference(float(x))
        except ValueError, e:
            return x
    else:
        return x

def abbreviated(self):
    return Results(self.description, abbreviate(self.key_header), map_maybe(abbreviate, self.headers), map_dict(lambda filename, values: (filename, map_maybe_dict(lambda header, value: bind_maybe(abbreviate(header), lambda header: (header, percentify(value))), values)), self.results))


if __name__ == '__main__':
    import sys
    results = Results(readfile(list_get(sys.argv, 1, '-')))
    print abbreviated(results)
